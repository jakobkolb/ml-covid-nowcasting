name: ML-Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:

jobs:
  run-model:
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, 'Update resources')"

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      # Setup repository secrets and VPN connection
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Install git-secret
        env:
          PASSWORD: ${{secrets.PASSWORD}}
        run: |
          echo "$PASSWORD" | sudo -S apt-get update && 
          echo "$PASSWORD" | sudo -S apt-get install -y git-secret

      - name: Reveal secrets
        run: git secret reveal

      # Build and run pipeline
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v7
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Setup Environment
        run: cp model/.env.prod model.env
      - name: Run ML pipeline
        run: |
          poetry run jupyter nbconvert --to notebook --execute model/Detection_model.ipynb

      # Push updates to repo
      - name: Commit updates
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m"Update resources"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

